// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: mcstatus.proto

package mcstatuspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerType int32

const (
	ServerType_JAVA    ServerType = 0
	ServerType_BEDROCK ServerType = 1
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "JAVA",
		1: "BEDROCK",
	}
	ServerType_value = map[string]int32{
		"JAVA":    0,
		"BEDROCK": 1,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_mcstatus_proto_enumTypes[0].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_mcstatus_proto_enumTypes[0]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_mcstatus_proto_rawDescGZIP(), []int{0}
}

type ServerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host" xml:"host"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port" xml:"port"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name" xml:"name"`
	Motd          string                 `protobuf:"bytes,4,opt,name=motd,proto3" json:"motd" xml:"motd"`
	Map           string                 `protobuf:"bytes,5,opt,name=map,proto3" json:"map" xml:"map"`
	MaxPlayers    int32                  `protobuf:"varint,6,opt,name=max_players,json=maxPlayers,proto3" json:"max_players" xml:"max_players"`
	NumPlayers    int32                  `protobuf:"varint,7,opt,name=num_players,json=numPlayers,proto3" json:"num_players" xml:"num_players"`
	Players       []*Player              `protobuf:"bytes,8,rep,name=players,proto3" json:"players" xml:"players"`
	Version       string                 `protobuf:"bytes,9,opt,name=version,proto3" json:"version" xml:"version"`
	Favicon       string                 `protobuf:"bytes,10,opt,name=favicon,proto3" json:"favicon" xml:"favicon"`
	ServerType    ServerType             `protobuf:"varint,11,opt,name=server_type,json=serverType,proto3,enum=mcstatuspb.ServerType" json:"server_type" xml:"server_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	mi := &file_mcstatus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mcstatus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_mcstatus_proto_rawDescGZIP(), []int{0}
}

func (x *ServerStatus) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServerStatus) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerStatus) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

func (x *ServerStatus) GetMap() string {
	if x != nil {
		return x.Map
	}
	return ""
}

func (x *ServerStatus) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *ServerStatus) GetNumPlayers() int32 {
	if x != nil {
		return x.NumPlayers
	}
	return 0
}

func (x *ServerStatus) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ServerStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerStatus) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *ServerStatus) GetServerType() ServerType {
	if x != nil {
		return x.ServerType
	}
	return ServerType_JAVA
}

type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name" xml:"name"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid" xml:"uuid"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_mcstatus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_mcstatus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_mcstatus_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_mcstatus_proto protoreflect.FileDescriptor

const file_mcstatus_proto_rawDesc = "" +
	"\n" +
	"\x0emcstatus.proto\x12\n" +
	"mcstatuspb\"\xcd\x02\n" +
	"\fServerStatus\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04motd\x18\x04 \x01(\tR\x04motd\x12\x10\n" +
	"\x03map\x18\x05 \x01(\tR\x03map\x12\x1f\n" +
	"\vmax_players\x18\x06 \x01(\x05R\n" +
	"maxPlayers\x12\x1f\n" +
	"\vnum_players\x18\a \x01(\x05R\n" +
	"numPlayers\x12,\n" +
	"\aplayers\x18\b \x03(\v2\x12.mcstatuspb.PlayerR\aplayers\x12\x18\n" +
	"\aversion\x18\t \x01(\tR\aversion\x12\x18\n" +
	"\afavicon\x18\n" +
	" \x01(\tR\afavicon\x127\n" +
	"\vserver_type\x18\v \x01(\x0e2\x16.mcstatuspb.ServerTypeR\n" +
	"serverType\"0\n" +
	"\x06Player\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid*#\n" +
	"\n" +
	"ServerType\x12\b\n" +
	"\x04JAVA\x10\x00\x12\v\n" +
	"\aBEDROCK\x10\x01B\x0eZ\f./mcstatuspbb\x06proto3"

var (
	file_mcstatus_proto_rawDescOnce sync.Once
	file_mcstatus_proto_rawDescData []byte
)

func file_mcstatus_proto_rawDescGZIP() []byte {
	file_mcstatus_proto_rawDescOnce.Do(func() {
		file_mcstatus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcstatus_proto_rawDesc), len(file_mcstatus_proto_rawDesc)))
	})
	return file_mcstatus_proto_rawDescData
}

var file_mcstatus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mcstatus_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mcstatus_proto_goTypes = []any{
	(ServerType)(0),      // 0: mcstatuspb.ServerType
	(*ServerStatus)(nil), // 1: mcstatuspb.ServerStatus
	(*Player)(nil),       // 2: mcstatuspb.Player
}
var file_mcstatus_proto_depIdxs = []int32{
	2, // 0: mcstatuspb.ServerStatus.players:type_name -> mcstatuspb.Player
	0, // 1: mcstatuspb.ServerStatus.server_type:type_name -> mcstatuspb.ServerType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mcstatus_proto_init() }
func file_mcstatus_proto_init() {
	if File_mcstatus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcstatus_proto_rawDesc), len(file_mcstatus_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcstatus_proto_goTypes,
		DependencyIndexes: file_mcstatus_proto_depIdxs,
		EnumInfos:         file_mcstatus_proto_enumTypes,
		MessageInfos:      file_mcstatus_proto_msgTypes,
	}.Build()
	File_mcstatus_proto = out.File
	file_mcstatus_proto_goTypes = nil
	file_mcstatus_proto_depIdxs = nil
}
